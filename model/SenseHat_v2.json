{
    "@context": [
      "dtmi:dtdl:context;2",
      "dtmi:iotcentral:context;2"
    ],
    "@id": "dtmi:iotpnpadt:DigitalTwins;SenseHat;2",
    "@type": "Interface",
    "displayName": "SenseHat",
    "description": "IoT Plug and Play device model for SenseHat",
    "contents": [
      {
        "@type" : "Component",
        "schema": "dtmi:azure:DeviceManagement:DeviceInformation;1",
        "name": "deviceInfo",
        "displayName": "Device Information",
        "description": "Information about the device"
      },
      {
        "@type": [
          "Property"
        ],
        "name": "ConnectedOn",
        "displayName": "Connection Time",
        "schema": "dateTime"
      },
      {
        "@type": [
          "Telemetry",
          "Temperature"
        ],
        "name": "temperature_hts221",
        "displayName": "Temperature from HTS221",
        "description": "Temperature in degrees celsius from HTS221",
        "schema": "double",
        "unit": "degreeCelsius"
      },
      {
        "@type": [
          "Telemetry",
          "RelativeHumidity"
        ],
        "name": "humidity",
        "displayName": "Humidity from HTS221",
        "description": "Humidity in percent from HTS221",
        "schema": "double",
        "unit": "percent"
      },
      {
        "@type": [
          "Telemetry",
          "Temperature"
        ],
        "name": "temperature_lps25h",
        "displayName": "Temperature from LPS25H",
        "description": "Temperature in degrees fahrenheit from LPS25H",
        "schema": "double",
        "unit": "degreeFahrenheit"
      },
      {
        "@type": [
          "Telemetry",
          "Pressure"
        ],
        "name": "pressure",
        "displayName": "Pressure from LPS25H",
        "description": "Pressure in kilo pascal from LPS25H",
        "schema": "double",
        "unit": "kilopascal"
      },
      {
        "@type": [
          "Telemetry",
          "AccelerationVector"
        ],
        "name": "lsm9ds1_accelerometer",
        "displayName": "Accelerometer from IMU",
        "description": "Acceleration in Gs from LSM9DS1",
        "schema": "vector",
        "unit": "gForce"
      },
      {
        "@type": [
          "Telemetry",
          "AngularVelocity"
        ],
        "name": "lsm9ds1_gyroscope",
        "displayName": "Gyroscope from IMU",
        "description": "Gyroscope data in radian per second from LSM9DS1",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "x",
              "schema": "double"
            },
            {
              "name": "y",
              "schema": "double"
            },
            {
              "name": "z",
              "schema": "double"
            }
          ]
        },
        "unit": "radianPerSecond"
      },
      {
        "@type": [
          "Telemetry",
          "MagneticInduction"
        ],
        "name": "lsm9ds1_compass",
        "displayName": "Compass from LPS25H",
        "description": "Compass data in microtesla from LSM9DS1",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "x",
              "schema": "double"
            },
            {
              "name": "y",
              "schema": "double"
            },
            {
              "name": "z",
              "schema": "double"
            }
          ]
        },
        "unit": "tesla"
      },
      {
        "@type": [
          "Telemetry",
          "Angle"
        ],
        "name": "imu",
        "displayName": "Orientation from IMU",
        "description": "Orientation in degree from Inertial Measurement Unit sensor (LSM9DS1)",
        "unit": "degreeOfArc",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "name": "yaw",
              "schema": "double"
            },
            {
              "name": "roll",
              "schema": "double"
            },
            {
              "name": "pitch",
              "schema": "double"
            }
          ]
        }
      },
      {
        "@type": "Property",
        "name": "led_color",
        "displayName": "SenseHat LED Color",
        "description": "Change LED matrix color by update property",
        "writable": true,
        "schema": {
          "@type": "Enum",
          "valueSchema": "integer",
          "enumValues": [
            {
              "name": "off",
              "displayName": "Off",
              "enumValue": 0
            },
            {
              "name": "red",
              "displayName": "Red",
              "enumValue": 1
            },
            {
              "name": "green",
              "displayName": "Green",
              "enumValue": 2
            },
            {
              "name": "blue",
              "displayName": "Blue",
              "enumValue": 3
            },
            {
              "name": "white",
              "displayName": "White",
              "enumValue": 4
            },
            {
              "name": "yellow",
              "displayName": "Yellow",
              "enumValue": 5
            },
            {
              "name": "purple",
              "displayName": "Purple",
              "enumValue": 6
            }
          ]
        }
      },
      {
        "@type": "Command",
        "description": "This command will display text on the SenseHat LED matrix.",
        "name": "show_text",
        "request": {
          "name": "text_here",
          "schema": "string"
        }
      }
    ]
  }